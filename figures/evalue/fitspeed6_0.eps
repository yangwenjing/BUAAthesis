%!PS-Adobe-2.0 EPSF-2.0
%%Title: fitspeed6_0.eps
%%Creator: gnuplot 5.0 patchlevel 0
%%CreationDate: Sun Jul  5 11:30:44 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -120 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fitspeed6_0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 0)
  /Author (ywj)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jul  5 11:30:44 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 360 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1764 1152 M
63 0 V
4724 0 R
-63 0 V
stroke
1548 1152 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 0)]
] -120.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1764 1843 M
63 0 V
4724 0 R
-63 0 V
stroke
1548 1843 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 0.2)]
] -120.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1764 2534 M
63 0 V
4724 0 R
-63 0 V
stroke
1548 2534 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 0.4)]
] -120.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1764 3225 M
63 0 V
4724 0 R
-63 0 V
stroke
1548 3225 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 0.6)]
] -120.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1764 3916 M
63 0 V
4724 0 R
-63 0 V
stroke
1548 3916 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 0.8)]
] -120.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1764 4607 M
63 0 V
4724 0 R
-63 0 V
stroke
1548 4607 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 1)]
] -120.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1764 1152 M
0 63 V
0 3392 R
0 -63 V
stroke
1764 792 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 0)]
] -120.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2562 1152 M
0 63 V
0 3392 R
0 -63 V
stroke
2562 792 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 20)]
] -120.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3360 1152 M
0 63 V
0 3392 R
0 -63 V
stroke
3360 792 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 40)]
] -120.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4158 1152 M
0 63 V
0 3392 R
0 -63 V
stroke
4158 792 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 60)]
] -120.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4955 1152 M
0 63 V
0 3392 R
0 -63 V
stroke
4955 792 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 80)]
] -120.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5753 1152 M
0 63 V
0 3392 R
0 -63 V
stroke
5753 792 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 100)]
] -120.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6551 1152 M
0 63 V
0 3392 R
0 -63 V
stroke
6551 792 M
[ [(Helvetica) 360.0 0.0 true true 0 ( 120)]
] -120.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1764 4607 N
0 -3455 V
4787 0 V
0 3455 V
-4787 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
288 2879 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 360.0 0.0 true true 0 (probability)]
] -120.0 MCshow
grestore
LTb
LCb setrgbcolor
4157 252 M
[ [(Helvetica) 360.0 0.0 true true 0 (speed\(km/h\))]
] -120.0 MCshow
LTb
% Begin plot #1
5.000 UL
LTb
0.00 0.00 0.00 C LCb setrgbcolor
5624 1395 M
[ [(Helvetica) 360.0 0.0 true true 0 (f\(x\)=1-e)]
[(Helvetica) 288.0 180.0 true true 0 (-0.0025x)]
[(Helvetica) 230.4 324.0 true true 0 (1.65)]
[(Helvetica) 288.0 180.0 true true 0 (-0.845)]
] -184.8 MRshow
5.000 UL
LTb
0.00 0.00 0.00 C 5840 1395 M
279 0 V
1764 3122 M
48 5 V
49 11 V
48 16 V
48 18 V
49 22 V
48 25 V
48 27 V
49 28 V
48 31 V
49 32 V
48 33 V
48 35 V
49 35 V
48 36 V
48 37 V
49 37 V
48 37 V
48 37 V
49 37 V
48 37 V
48 36 V
49 37 V
48 35 V
48 36 V
49 34 V
48 34 V
49 33 V
48 32 V
48 32 V
49 30 V
48 30 V
48 28 V
49 28 V
48 27 V
48 25 V
49 25 V
48 24 V
48 22 V
49 22 V
48 21 V
48 19 V
49 19 V
48 18 V
49 17 V
48 16 V
48 15 V
49 15 V
48 14 V
48 12 V
49 13 V
48 11 V
48 11 V
49 10 V
48 9 V
48 9 V
49 9 V
48 7 V
49 8 V
48 6 V
48 7 V
49 5 V
48 6 V
48 5 V
49 5 V
48 4 V
48 4 V
49 4 V
48 3 V
48 3 V
49 3 V
48 3 V
48 2 V
49 3 V
48 2 V
49 2 V
48 2 V
48 1 V
49 2 V
48 1 V
48 1 V
49 1 V
48 1 V
48 1 V
49 1 V
48 1 V
48 1 V
49 0 V
48 1 V
48 0 V
49 1 V
48 0 V
49 1 V
48 0 V
48 0 V
49 1 V
48 0 V
48 0 V
49 0 V
48 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
1.000 UL
LTb
0.90 0.12 0.06 C 1764 2934 PentF
1844 2993 PentF
1924 3051 PentF
2003 3112 PentF
2083 3171 PentF
2163 3231 PentF
2243 3291 PentF
2283 3341 PentF
2362 3399 PentF
2442 3457 PentF
2522 3513 PentF
2602 3567 PentF
2682 3623 PentF
2761 3678 PentF
2801 3723 PentF
2881 3777 PentF
2961 3830 PentF
3041 3883 PentF
3120 3934 PentF
3200 3982 PentF
3280 4022 PentF
3320 4068 PentF
3400 4113 PentF
3479 4154 PentF
3559 4193 PentF
3639 4228 PentF
3719 4261 PentF
3798 4285 PentF
3838 4314 PentF
3918 4341 PentF
3998 4367 PentF
4078 4391 PentF
4158 4414 PentF
4237 4437 PentF
4277 4455 PentF
4357 4475 PentF
4437 4496 PentF
4517 4515 PentF
4596 4534 PentF
4676 4551 PentF
4756 4566 PentF
4796 4575 PentF
4876 4582 PentF
4955 4588 PentF
5035 4592 PentF
5115 4595 PentF
5195 4597 PentF
5274 4598 PentF
5314 4600 PentF
5394 4601 PentF
5474 4602 PentF
5554 4602 PentF
5633 4603 PentF
5713 4603 PentF
5793 4603 PentF
5833 4604 PentF
5913 4604 PentF
5993 4604 PentF
6072 4604 PentF
6152 4604 PentF
6232 4605 PentF
6272 4605 PentF
6352 4605 PentF
6431 4605 PentF
6511 4605 PentF
1764 3210 PentF
1844 3251 PentF
1924 3284 PentF
2003 3314 PentF
2083 3343 PentF
2163 3373 PentF
2243 3404 PentF
2283 3430 PentF
2362 3465 PentF
2442 3500 PentF
2522 3538 PentF
2602 3576 PentF
2682 3619 PentF
2761 3662 PentF
2801 3700 PentF
2881 3748 PentF
2961 3798 PentF
3041 3851 PentF
3120 3905 PentF
3200 3958 PentF
3280 4000 PentF
3320 4052 PentF
3400 4101 PentF
3479 4146 PentF
3559 4188 PentF
3639 4227 PentF
3719 4263 PentF
3798 4288 PentF
3838 4317 PentF
3918 4342 PentF
3998 4366 PentF
4078 4388 PentF
4158 4409 PentF
4237 4429 PentF
4277 4445 PentF
4357 4465 PentF
4437 4484 PentF
4517 4503 PentF
4596 4524 PentF
4676 4543 PentF
4756 4559 PentF
4796 4568 PentF
4876 4576 PentF
4955 4582 PentF
5035 4586 PentF
5115 4589 PentF
5195 4592 PentF
5274 4594 PentF
5314 4596 PentF
5394 4598 PentF
5474 4600 PentF
5554 4601 PentF
5633 4602 PentF
5713 4603 PentF
5793 4603 PentF
5833 4603 PentF
5913 4604 PentF
5993 4604 PentF
6072 4604 PentF
6152 4605 PentF
6232 4605 PentF
6272 4605 PentF
6352 4605 PentF
6431 4605 PentF
6511 4605 PentF
1764 3085 PentF
1844 3129 PentF
1924 3166 PentF
2003 3202 PentF
2083 3236 PentF
2163 3272 PentF
2243 3310 PentF
2283 3343 PentF
2362 3383 PentF
2442 3425 PentF
2522 3469 PentF
2602 3517 PentF
2682 3565 PentF
2761 3617 PentF
2801 3661 PentF
2881 3716 PentF
2961 3773 PentF
3041 3831 PentF
3120 3889 PentF
3200 3947 PentF
3280 3993 PentF
3320 4047 PentF
3400 4097 PentF
3479 4143 PentF
3559 4187 PentF
3639 4226 PentF
3719 4262 PentF
3798 4289 PentF
3838 4320 PentF
3918 4350 PentF
3998 4376 PentF
4078 4402 PentF
4158 4426 PentF
4237 4449 PentF
4277 4466 PentF
4357 4487 PentF
4437 4507 PentF
4517 4527 PentF
4596 4545 PentF
4676 4561 PentF
4756 4574 PentF
4796 4582 PentF
4876 4589 PentF
4955 4593 PentF
5035 4597 PentF
5115 4599 PentF
5195 4601 PentF
5274 4602 PentF
5314 4604 PentF
5394 4605 PentF
5474 4605 PentF
5554 4606 PentF
5633 4606 PentF
5713 4606 PentF
5793 4606 PentF
5833 4606 PentF
5913 4606 PentF
5993 4606 PentF
6072 4606 PentF
6152 4607 PentF
6232 4607 PentF
6272 4607 PentF
6431 4607 PentF
6511 4607 PentF
1764 2999 PentF
1844 3059 PentF
1924 3112 PentF
2003 3165 PentF
2083 3217 PentF
2163 3270 PentF
2243 3327 PentF
2283 3375 PentF
2362 3431 PentF
2442 3487 PentF
2522 3541 PentF
2602 3594 PentF
2682 3650 PentF
2761 3707 PentF
2801 3757 PentF
2881 3814 PentF
2961 3870 PentF
3041 3926 PentF
3120 3981 PentF
3200 4033 PentF
3280 4073 PentF
3320 4120 PentF
3400 4165 PentF
3479 4204 PentF
3559 4242 PentF
3639 4276 PentF
3719 4307 PentF
3798 4330 PentF
3838 4355 PentF
3918 4379 PentF
3998 4401 PentF
4078 4422 PentF
4158 4442 PentF
4237 4461 PentF
4277 4477 PentF
4357 4494 PentF
4437 4511 PentF
4517 4528 PentF
4596 4544 PentF
4676 4558 PentF
4756 4570 PentF
4796 4578 PentF
4876 4584 PentF
4955 4588 PentF
5035 4592 PentF
5115 4594 PentF
5195 4596 PentF
5274 4598 PentF
5314 4599 PentF
5394 4600 PentF
5474 4601 PentF
5554 4601 PentF
5633 4602 PentF
5713 4602 PentF
5793 4603 PentF
5833 4603 PentF
5913 4603 PentF
5993 4603 PentF
6072 4604 PentF
6152 4604 PentF
6232 4604 PentF
6272 4604 PentF
6352 4604 PentF
6431 4604 PentF
6511 4604 PentF
1764 3011 PentF
1844 3072 PentF
1924 3126 PentF
2003 3181 PentF
2083 3234 PentF
2163 3288 PentF
2243 3344 PentF
2283 3394 PentF
2362 3450 PentF
2442 3506 PentF
2522 3561 PentF
2602 3616 PentF
2682 3671 PentF
2761 3727 PentF
2801 3776 PentF
2881 3832 PentF
2961 3888 PentF
3041 3941 PentF
3120 3995 PentF
3200 4046 PentF
3280 4089 PentF
3320 4136 PentF
3400 4180 PentF
3479 4221 PentF
3559 4259 PentF
3639 4293 PentF
3719 4324 PentF
3798 4348 PentF
3838 4375 PentF
3918 4400 PentF
3998 4421 PentF
4078 4442 PentF
4158 4460 PentF
4237 4478 PentF
4277 4492 PentF
4357 4508 PentF
4437 4523 PentF
4517 4538 PentF
4596 4552 PentF
4676 4565 PentF
4756 4576 PentF
4796 4583 PentF
4876 4589 PentF
4955 4593 PentF
5035 4596 PentF
5115 4598 PentF
5195 4600 PentF
5274 4601 PentF
5314 4603 PentF
5394 4604 PentF
5474 4604 PentF
5554 4605 PentF
5633 4605 PentF
5713 4606 PentF
5793 4606 PentF
5833 4606 PentF
5913 4606 PentF
5993 4606 PentF
6072 4606 PentF
6152 4606 PentF
6232 4606 PentF
6272 4607 PentF
6352 4607 PentF
6431 4607 PentF
6511 4607 PentF
1764 3109 PentF
1844 3167 PentF
1924 3218 PentF
2003 3269 PentF
2083 3318 PentF
2163 3368 PentF
2243 3419 PentF
2283 3464 PentF
2362 3516 PentF
2442 3567 PentF
2522 3617 PentF
2602 3669 PentF
2682 3720 PentF
2761 3772 PentF
2801 3817 PentF
2881 3870 PentF
2961 3922 PentF
3041 3972 PentF
3120 4022 PentF
3200 4070 PentF
3280 4110 PentF
3320 4155 PentF
3400 4197 PentF
3479 4236 PentF
3559 4270 PentF
3639 4302 PentF
3719 4330 PentF
3798 4354 PentF
3838 4378 PentF
3918 4401 PentF
3998 4423 PentF
4078 4442 PentF
4158 4459 PentF
4237 4476 PentF
4277 4489 PentF
4357 4504 PentF
4437 4519 PentF
4517 4533 PentF
4596 4548 PentF
4676 4561 PentF
4756 4572 PentF
4796 4579 PentF
4876 4584 PentF
4955 4589 PentF
5035 4592 PentF
5115 4594 PentF
5195 4596 PentF
5274 4597 PentF
5314 4599 PentF
5394 4600 PentF
5474 4601 PentF
5554 4601 PentF
5633 4602 PentF
5713 4602 PentF
5793 4603 PentF
5833 4603 PentF
5913 4603 PentF
5993 4603 PentF
6072 4603 PentF
6152 4604 PentF
6232 4604 PentF
6272 4604 PentF
6352 4604 PentF
6431 4604 PentF
6511 4604 PentF
1764 3055 PentF
1844 3114 PentF
1924 3166 PentF
2003 3217 PentF
2083 3268 PentF
2163 3321 PentF
2243 3375 PentF
2283 3422 PentF
2362 3476 PentF
2442 3530 PentF
2522 3582 PentF
2602 3636 PentF
2682 3690 PentF
2761 3744 PentF
2801 3790 PentF
2881 3843 PentF
2961 3896 PentF
3041 3948 PentF
3120 3999 PentF
3200 4049 PentF
3280 4090 PentF
3320 4136 PentF
3400 4178 PentF
3479 4217 PentF
3559 4253 PentF
3639 4286 PentF
3719 4315 PentF
3798 4338 PentF
3838 4364 PentF
3918 4388 PentF
3998 4411 PentF
4078 4433 PentF
4158 4453 PentF
4237 4471 PentF
4277 4486 PentF
4357 4503 PentF
4437 4519 PentF
4517 4534 PentF
4596 4548 PentF
4676 4562 PentF
4756 4574 PentF
4796 4581 PentF
4876 4587 PentF
4955 4591 PentF
5035 4594 PentF
5115 4597 PentF
5195 4598 PentF
5274 4600 PentF
5314 4601 PentF
5394 4602 PentF
5474 4603 PentF
5554 4604 PentF
5633 4604 PentF
5713 4604 PentF
5793 4605 PentF
5833 4605 PentF
5913 4605 PentF
5993 4605 PentF
6072 4605 PentF
6152 4605 PentF
6232 4605 PentF
6272 4606 PentF
6352 4606 PentF
6431 4606 PentF
6511 4606 PentF
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1764 4607 N
0 -3455 V
4787 0 V
0 3455 V
-4787 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
